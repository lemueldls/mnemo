name: "Reusable android workflow"

on:
  workflow_call:
    inputs:
      publish:
        required: false
        type: boolean
    secrets:
      ANDROID_RELEASE_KEYSTORE:
        required: false
      ANDROID_RELEASE_KEYSTORE_PASSWORD:
        required: false
      ANDROID_RELEASE_KEY:
        required: false
      ANDROID_RELEASE_KEY_PASSWORD:
        required: false

jobs:
  build:
    runs-on: ubuntu-latest
    name: "üì¶"
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        name: üîÑ Checkout

      - name: üìù Extract version from tauri.conf.json
        id: get-version
        shell: bash
        run: |
          CURRENT_VERSION=$(jq -r '.version' platform/tauri/tauri.conf.json)
          echo "current-version=$CURRENT_VERSION" >> "$GITHUB_OUTPUT"

      - name: üìù Resolve tag
        id: resolve-tag
        shell: bash
        run: |
          if [ "${{ inputs.publish }}" = "true" ]; then
            CURRENT_TAG=v${{ steps.get-version.outputs.current-version }}
          else
            CURRENT_TAG=$GITHUB_REF_NAME
          fi
          echo "current-tag=$CURRENT_TAG" >> "$GITHUB_OUTPUT"

      - name: ‚òï Setup Java
        uses: actions/setup-java@c5195efecf7bdfc987ee8bae7a71cb8b11521c00 # v4
        with:
          distribution: "zulu"
          java-version: "17"

      - name: ü§ñ Setup Android SDK
        uses: android-actions/setup-android@9fc6c4e9069bf8d3d10b2204b1fb8f6ef7065407 # v3

      - name: üõ†Ô∏è Install NDK
        run: sdkmanager "ndk;27.0.11902837"

      - name: ü¶Ä Install rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: aarch64-linux-android,armv7-linux-androideabi,i686-linux-android,x86_64-linux-android

      - name: üì¶ Rust cache
        uses: Swatinem/rust-cache@9d47c6ad4b02e050fd481d890b2ea34778fd09d6 # v2
        with:
          save-if: ${{ github.ref == 'refs/heads/main' }}
          workspaces: platform

      - name: üì¶ Run sccache
        if: ${{ !inputs.publish }}
        uses: mozilla-actions/sccache-action@7d986dd989559c6ecdb630a3fd2557667be217ad # v0.0.9

      - name: üì¶ Set Rust caching env vars only on non-release runs
        if: ${{ !inputs.publish }}
        shell: bash
        run: |
          echo "SCCACHE_GHA_ENABLED=true" >> $GITHUB_ENV
          echo "RUSTC_WRAPPER=sccache" >> $GITHUB_ENV

      - name: üì• Install pnpm
        uses: pnpm/action-setup@v4

      - name: üì• Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 24
          cache: "pnpm"

      - name: üì• Install frontend dependencies
        run: pnpm install

      - name: üîë Extract android signing key
        run: |
          echo "${{ secrets.ANDROID_KEYSTORE }}" | base64 --decode > platform/tauri/gen/android/app/key.jks
          echo "${{ secrets.ANDROID_KEYSTORE_PROPERTIES }}" | base64 --decode > platform/tauri/gen/android/keystore.properties

      - name: üî® Build app bundle
        run: |
          pnpm tauri android init
          pnpm tauri android build
        env:
          NDK_HOME: ${{ env.ANDROID_HOME }}/ndk/27.0.11902837
          NODE_OPTIONS: --max-old-space-size=8192
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}
          TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY_PASSWORD }}
          NUXT_PUBLIC_API_BASE_URL: ${{ secrets.NUXT_PUBLIC_API_BASE_URL }}
          NUXT_SESSION_PASSWORD: ${{ secrets.NUXT_SESSION_PASSWORD }}
          NUXT_OAUTH_GITHUB_CLIENT_ID: ${{ secrets.NUXT_OAUTH_GITHUB_CLIENT_ID }}
          NUXT_OAUTH_GITHUB_CLIENT_SECRET: ${{ secrets.NUXT_OAUTH_GITHUB_CLIENT_SECRET }}
          NUXT_OAUTH_GITHUB_REDIRECT_URL: ${{ secrets.NUXT_OAUTH_GITHUB_REDIRECT_URL }}

      - name: üì§ Upload build artifacts (push or pr builds only)
        if: ${{ !inputs.publish }}
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: "signed-apk"
          path: |
            platform/tauri/gen/android/app/build/outputs/apk/universal/release/app-universal-release.apk

      - name: ‚úèÔ∏è Rename APK file
        run: |
          mv ./platform/tauri/gen/android/app/build/outputs/apk/universal/release/app-universal-release.apk ./platform/tauri/gen/android/app/build/outputs/apk/universal/release/Mnemo_${{ steps.get-version.outputs.current-version }}_universal.apk

      - name: üöÄ Publish
        uses: softprops/action-gh-release@72f2c25fcb47643c292f7107632f7a47c1df5cd8 # v2
        with:
          name: Mnemo (${{ steps.resolve-tag.outputs.current-tag }})
          draft: ${{ !inputs.publish }}
          tag_name: mnemo-${{ steps.resolve-tag.outputs.current-tag }}
          make_latest: false
          generate_release_notes: false
          files: |
            platform/tauri/gen/android/app/build/outputs/apk/universal/release/Mnemo_${{ steps.get-version.outputs.current-version }}_universal.apk

      # - name: üõ°Ô∏è Attest build provenance (publish only)
      #   if: ${{ inputs.publish }}
      #   uses: actions/attest-build-provenance@e8998f949152b193b063cb0ec769d69d929409be # v2.4.0
      #   with:
      #     subject-path: |
      #       platform/tauri/gen/android/app/build/outputs/apk/universal/release/Mnemo_${{ steps.resolve-tag.outputs.current-tag }}_universal.apk
